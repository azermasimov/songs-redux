{"version":3,"sources":["components/SongDetails.js","components/SongList.js","actions/index.js","components/App.js","reducers/index.js","index.js"],"names":["connect","state","song","selectedSong","title","duration","SongList","this","props","songs","map","className","onClick","selectSong","renderList","Component","type","payload","App","combineReducers","action","ReactDOM","render","store","createStore","reducers","document","querySelector"],"mappings":"2JAmBeA,eAJS,SAACC,GACrB,MAAO,CAAEC,KAAMD,EAAME,gBAGVH,EAjBK,SAAC,GAAc,IAAZE,EAAW,EAAXA,KACnB,OACI,gCACI,8CACA,wCACYA,EAAKE,MACb,uBAFJ,aAGeF,EAAKG,kB,8BCL1BC,E,gKACF,WAAc,IAAD,OACT,OAAOC,KAAKC,MAAMC,MAAMC,KAAI,SAACR,GACzB,OACI,sBAAKS,UAAU,OAAf,UACI,qBAAKA,UAAU,wBAAf,SACI,wBACIA,UAAU,oBACVC,QAAS,kBAAM,EAAKJ,MAAMK,WAAWX,IAFzC,sBAOJ,qBAAKS,UAAU,UAAf,SAA0BT,EAAKE,UATRF,EAAKE,Y,oBAe5C,WACI,OAAO,qBAAKO,UAAU,kBAAf,SAAkCJ,KAAKO,mB,QApB/BC,WA4BRf,eAJS,SAACC,GACrB,MAAO,CAAEQ,MAAOR,EAAMQ,SAGc,CAAEI,WChChB,SAACX,GACvB,MAAO,CACHc,KAAM,cACNC,QAASf,KD6BFF,CAAyCM,GEdzCY,EAfH,WACR,OACI,qBAAKP,UAAU,oBAAf,SACI,sBAAKA,UAAU,SAAf,UACI,qBAAKA,UAAU,oBAAf,SACI,cAAC,EAAD,MAEJ,qBAAKA,UAAU,oBAAf,SACI,cAAC,EAAD,YCQLQ,cAAgB,CAC3BV,MAlBgB,WAChB,MAAO,CACH,CAAEL,MAAO,YAAaC,SAAU,QAChC,CAAED,MAAO,WAAYC,SAAU,QAC/B,CAAED,MAAO,YAAaC,SAAU,QAChC,CAAED,MAAO,QAASC,SAAU,UAchCF,aAVwB,WAAgC,IAA/BA,EAA8B,uDAAf,GAAIiB,EAAW,uCACvD,MAAoB,gBAAhBA,EAAOJ,KACAI,EAAOH,QAGXd,KCTXkB,IAASC,OACL,cAAC,IAAD,CAAUC,MAAOC,YAAYC,GAA7B,SACI,cAAC,EAAD,MAEJC,SAASC,cAAc,Y","file":"static/js/main.dbeb24e5.chunk.js","sourcesContent":["import { connect } from \"react-redux\";\r\n\r\nconst SongDetails = ({ song }) => {\r\n    return (\r\n        <div>\r\n            <h3>Details for:</h3>\r\n            <p>\r\n                Title: {song.title}\r\n                <br />\r\n                Duration: {song.duration}\r\n            </p>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return { song: state.selectedSong };\r\n};\r\n\r\nexport default connect(mapStateToProps)(SongDetails);","import { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { selectSong } from \"../actions\";\r\n\r\nclass SongList extends Component {\r\n    renderList() {\r\n        return this.props.songs.map((song) => {\r\n            return (\r\n                <div className=\"item\" key={song.title}>\r\n                    <div className=\"right floated content\">\r\n                        <button\r\n                            className=\"ui button primary\"\r\n                            onClick={() => this.props.selectSong(song)}\r\n                        >\r\n                            Select\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"content\">{song.title}</div>\r\n                </div>\r\n            );\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <div className=\"ui divided list\">{this.renderList()}</div>;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return { songs: state.songs };\r\n};\r\n\r\nexport default connect(mapStateToProps, { selectSong })(SongList); // Boiler Plate","export const selectSong = (song) => {\r\n    return {\r\n        type: 'SELECT_SONG',\r\n        payload: song,\r\n    }\r\n}","import SongDetails from \"./SongDetails\";\r\nimport SongList from \"./SongList\";\r\n\r\nconst App = () => {\r\n    return (\r\n        <div className=\"ui container grid\">\r\n            <div className=\"ui row\">\r\n                <div className=\"column eight wide\">\r\n                    <SongList />\r\n                </div>\r\n                <div className=\"column eight wide\">\r\n                    <SongDetails />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;","import { combineReducers } from 'redux';\r\n\r\nconst songReducer = () => {\r\n    return [\r\n        { title: \"No scrubs\", duration: \"4:05\" },\r\n        { title: \"Macarena\", duration: \"3:45\" },\r\n        { title: \"All stars\", duration: \"2:12\" },\r\n        { title: \"Hello\", duration: \"3:20\" },\r\n    ];\r\n};\r\n\r\nconst selectedSongReducer = (selectedSong = \"\", action) => {\r\n    if (action.type === 'SELECT_SONG') {\r\n        return action.payload;\r\n    }\r\n\r\n    return selectedSong;\r\n}\r\n\r\nexport default combineReducers({\r\n    songs: songReducer,\r\n    selectedSong: selectedSongReducer,\r\n});","import ReactDOM from 'react-dom';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\n\nimport App from './components/App';\nimport reducers from './reducers';\n\nReactDOM.render(\n    <Provider store={createStore(reducers)}>\n        <App />\n    </Provider>, \n    document.querySelector(\"#root\")\n);"],"sourceRoot":""}